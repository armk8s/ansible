---
# tasks file for basic

- name: update host name
  hostname:
    name: "{{ inventory_hostname }}"
  tags:
    - prepare
    - basic
    - hostname

- name: change timezone
  timezone:
    name: "{{ timezone }}"
  tags:
    - prepare
    - basic
    - timezone

- name: set timedatectl
  template:
    src: timesyncd.conf.j2
    dest: /etc/systemd/timesyncd.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - restart timesyncd
    - enable timesyncd
    - run timedatectl
  tags:
    - prepare
    - basic
    - time

- name: update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600
  tags:
    - prepare
    - basic
    - update

- name: update all packages
  apt:
    upgrade: dist
  tags:
    - prepare
    - basic
    - update

- name: install some required tools
  apt:
    name:
      - ipset
      - conntrack
      - socat
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
      - containerd
      - net-tools
      - dnsutils
    state: present
  tags:
    - prepare
    - basic
    - install

- name: set hostname
  hostname:
    name: "{{ inventory_hostname }}"
  tags:
    - prepare
    - basic
    - hostname

- name: set hostname to hosts file
  template:
    src: hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: 0644
  tags:
    - prepare
    - basic
    - hosts

- name: change password of the user
  user:
    name: "{{ ansible_ssh_user }}"
    update_password: always
    password: "{{ user_password|password_hash('sha512') }}"
  when:
    - user_password != ""
  tags:
    - prepare
    - basic
    - password

- name: discover swap status
  shell: cat /proc/swaps | wc -l
  register: swap_out
  tags:
    - prepare
    - basic
    - swap

- name: disable swap if enabled for non rpi hosts
  shell: |
    swapoff -a
  when: 
    - swap_out.stdout != "1"
  tags:
    - prepare
    - basic
    - swap

- name: Enable IPv4 forwarding
  sysctl:
    name: "{{ item }}"
    value: "1"
    state: present
    reload: yes
  with_items:
    - net.ipv4.ip_forward
    - net.ipv6.conf.all.forwarding
  tags:
    - prepare
    - basic
    - forwarding

- name: Activating cgroup support
  lineinfile:
    path: /boot/firmware/cmdline.txt
    regexp: '^((?!.*\bcgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory\b).*)$'
    line: '\1 cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory swapaccount=1'
    backrefs: true
  tags:
    - prepare
    - basic
    - cgroup

- name: Flush iptables before changing to iptables-legacy
  iptables:
    flush: true
  changed_when: false
  tags:
    - prepare
    - basic
    - iptables

- name: use iptables-legacy
  alternatives:
    name: '{{ item.name }}'
    path: '{{ item.path }}'
  loop:
    - name: iptables
      path: /usr/sbin/iptables-legacy
    - name: ip6tables
      path: /usr/sbin/ip6tables-legacy
  tags:
    - prepare
    - basic
    - iptables

- name: Check if a reboot is needed for Debian and Ubuntu boxes
  register: reboot_required_file
  stat:
    path: /var/run/reboot-required
    get_md5: no

- name: Reboot the Debian or Ubuntu server
  reboot:
    msg: "Reboot initiated by Ansible due to kernel updates"
    connect_timeout: 5
    reboot_timeout: 300
    pre_reboot_delay: 0
    post_reboot_delay: 30
    test_command: uptime
  when: reboot_required_file.stat.exists
